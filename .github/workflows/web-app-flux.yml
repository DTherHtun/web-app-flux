name: Setup Go environment
on: [push, pull_request]
env:
  tags: 'v0.3'

jobs:
  go_build:
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref != 'refs/tags/flux' }}
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
    env:
      GOPATH: GOHOME
      GO11MODULE: off
      CGO_ENABLED: 0
      GOOS: linux
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: GOHOME/src/github.com/${{ github.repository }}
    - run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      id: slug
    - name: Setup Env
      uses: actions/setup-go@v2
      with:
        path: GOHOME
        go-version: ${{ matrix.go-version }}
    - name: GO Get 
      run: |
        go get github.com/rakyll/statik 
    - name: GO Test
      run: |
        cd GOHOME/src/github.com/${{ github.repository }}/hola/
        go test -v
    - name: GO BUILD
      run: |
        cd GOHOME/src/github.com/${{ github.repository }}/hola/
        go build -ldflags="-w -s" -a -installsuffix cgo
    - name: Sent Noti
      if: ${{ always() }}
      uses: DTherHtun/google-chat-action@v0.8
      with:
        project: ${{ github.repository }}
        commit: ${{ steps.slug.outputs.sha8 }}
        branch: ${{ github.ref }}
        status: ${{ job.status }}
        actionid: ${{ github.repository }}/actions/runs/${{ github.run_id }}
        webhook: "https://chat.googleapis.com/v1/spaces/AAAAYTX-Vqs/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=Iwtvo1dwg36dZgUyrUCREQGGMrO71PkIoQGafOf17Yg%3D&threadKey=git-commit"

  docker_bp:
    runs-on: ubuntu-latest
    needs: [go_build]
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
    env:
      GOPATH: GOHOME
    steps: 
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: GOHOME/src/github.com/${{ github.repository }}
    - name: Build & push
      run: |
        cd GOHOME/src/github.com/${{ github.repository }}/hola/
        echo "${{ secrets.DOCKER_PASS }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
        docker build -t dther/web-app-flux:${{ env.tags }} .
        docker push dther/web-app-flux:${{ env.tags }}
